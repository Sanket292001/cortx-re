apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "elastic-project.init-setup-job" . }}
  namespace: {{ include "elastic-project.tools.namespace" . }}
  labels:
    {{- include "elastic-project.labels" . | nindent 4 }}
  annotations:    
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-1"
spec:
  template:
    spec:
      initContainers:
      - name: init-job-container
        image: debian:buster
        command: ["/bin/bash","-c","--"]
        args: ["apt update && apt install -y curl && while [ $(curl -Lsw '%{http_code}' http://{{ include "elastic-project.kibana.name" . }}-kb-http.{{ include "elastic-project.tools.namespace" . }}.svc.cluster.local:{{ .Values.kibana.service.port }} -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for the {{ include "elastic-project.kibana.name" . }} ...'; done"]
      containers:
      - name: {{ include "elastic-project.init-setup-job" . }}
        image: debian:buster                
        command: [ "/bin/bash", "-c", "--" ]
        args:
          - "sh /data/configure.sh"
        volumeMounts:
          - mountPath: /data
            name: config-volume
        env:               
          - name: ELASTICSEARCH_USERNAME
            value: {{ required "Elasticsearch Username is Required" .Values.elastic_user.username }}
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                key: elastic
                name: {{ include "elastic-project.elasticsearch.name" . }}-es-elastic-user                
      restartPolicy: Never            
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "elastic-project.init-setup-job" . }}